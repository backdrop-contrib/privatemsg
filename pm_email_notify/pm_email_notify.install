<?php

/**
 * @file
 * This file takes care of creating/deleting pm_email_notify table used
 * for storing user notification preferences
 */

/**
 * Implements hook_update_dependencies().
 */
function pm_email_notify_update_dependencies() {
  $dependencies['pm_email_notify']['1000']['privatemsg'] = '1004';
  return $dependencies;
}

/**
 * Convert the old table to privatemsg settings API.
 */
function pm_email_notify_update_1000() {
  if (!db_table_exists('pm_email_notify')) {
    return;
  }

  // Update the site-wide default setting.
  config_clear('pm_email_notify.settings', 'default');

  // Convert user saved settings.
  $result = db_query('SELECT * FROM {pm_email_notify}');
  foreach ($result as $row) {
    privatemsg_set_setting('user', $row->user_id, 'email_notify_is_enabled', $row->email_notify_is_enabled ? 1 : 0);
  }

  db_drop_table('pm_email_notify');
}

/**
 * Remove unused variables
 */
function pm_email_notify_update_1001() {
  // Update the site-wide default setting.
  $config = config('pm_email_notify.settings');
  if ($notify_level = update_variable_get('privatemsg_setting_email_notify_level', 0)) {
    $config->set('notify_level', $notify_level);
  }
  elseif ($config->get('default')) {
    $config->set('notify_level', 12);
  }
  else {
    $config->set('notify_level', 0);
  }

  $config->set('notify_only_user', update_variable_get('privatemsg_setting_email_notify_only_user', FALSE));

  $config->save();

  update_variable_del('privatemsg_setting_email_notify_level');
  update_variable_del('privatemsg_setting_email_notify_only_user');

  // Convert user saved settings.
  $result = db_select('pm_setting')
    ->fields('pm_setting', array('id', 'value'))
    ->condition('type', 'user')
    ->condition('setting', 'email_notify_is_enabled')
    ->execute();
  foreach ($result as $row) {
    privatemsg_set_setting('user', $row->id, 'email_notify_level', $row->value ? -1 : 0);
  }
}

/**
 * Allow subject and body to be translated.
 */
function pm_email_notify_update_1002() {
  $config = config('pm_email_notify.settings');
  $translatables = $config->get('_config_translatables');
  $translatables[] = 'body';
  $translatables[] = 'subject';
  $config->set('_config_translatables', $translatables);
  $config->save();
}
