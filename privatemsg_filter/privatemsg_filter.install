<?php

/**
 * @file
 * install file for privatemsg_filter
 */

/**
 * Implements hook_schema().
 */
function privatemsg_filter_schema() {
  $schema = array();

  $schema['pm_tags'] = array(
    'description' => '{pm_tags} holds the names of tags and their id.',
    'fields' => array(
      'tag_id' => array(
        'description' => 'Tag ID',
        'type' => 'serial',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'tag' => array(
        'description' => 'The name of the tag',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'public' => array(
        'description' => 'Defines if a tag is public (visible for all users)',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'default' => 0,
      ),
      'hidden' => array(
        'type' => 'int',
        'description' => 'Defines if a tag should not be displayed and is usually automatically managed',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'default' => 0,
      )
    ),
    'primary key' => array('tag_id'),
    'indexes' => array(
      'tag_list' => array('tag_id', 'tag', 'public'),
    ),
  );

  $schema['pm_tags_index'] = array(
    'description' => '{pm_tags_index} holds mapping information between tags, threads the users.',
    'fields' => array(
      'tag_id' => array(
        'description' => 'Tag ID',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'uid' => array(
        'description' => 'ID of the user',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
      'thread_id' => array(
        'description' => 'id of the thread',
        'type' => 'int',
        'not null' => TRUE,
        'unsigned' => TRUE,
      ),
    ),
    'primary key' => array('tag_id', 'uid', 'thread_id'),
    'indexes' => array(
      'thread_tags' => array('uid', 'thread_id'),
    ),
  );

  return $schema;
}


/**
 * Implements hook_enable().
 */
function privatemsg_filter_enable() {
  if (!($tag_id = config_get('privatemsg_filter.settings', 'privatemsg_filter_inbox_tag')) || db_query('SELECT 1 FROM {pm_tags} WHERE tag_id = :tag_id', array(':tag_id' => $tag_id))->fetchField()) {
    $tag_id = db_insert('pm_tags')
      ->fields(array(
        'tag' => 'Inbox',
        'hidden' => 1,
      ))
      ->execute();
    config_set('privatemsg_filter.settings', 'privatemsg_filter_inbox_tag', $tag_id);
  }
  backdrop_set_message(t('Visit <a href="!rebuild_url">Rebuild Inbox</a> to tag existing messages to show up in the inbox.', array('!rebuild_url' => url('admin/config/messaging/privatemsg/tags/rebuild'))));
}
