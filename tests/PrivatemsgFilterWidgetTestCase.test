<?php

require_once backdrop_get_path('module', 'privatemsg') . '/tests/PrivatemsgBaseTestCase.test';

/**
 * Test filters, tags and inbox/sent handling.
 */
class PrivatemsgFilterWidgetTestCase extends PrivatemsgBaseTestCase {

  /**
   * Implements setUp().
   */
  function setUp() {
    parent::setUp('privatemsg', 'privatemsg_filter');
  }

  /**
   * Generic filter widget tests.
   */
  function testAuthorSearch() {
    $user1 = $this->backdropCreateuser(array('read privatemsg', 'write privatemsg', 'tag private messages', 'create private message tags', 'filter private messages'));
    $user2 = $this->backdropCreateuser(array('read privatemsg', 'write privatemsg', 'tag private messages', 'create private message tags', 'filter private messages'));
    $user3 = $this->backdropCreateuser(array('read privatemsg', 'write privatemsg', 'tag private messages', 'create private message tags', 'filter private messages'));

    $this->backdropLogin($user2);
    $this->backdropGet('messages');

    // Make sure the widget is not displayed when there are no messages.
    $this->assertNoFieldById('edit-author');

    // Create a new thread from user 1 through the api.
    $response = privatemsg_new_thread(array($user2), $subject = $this->randomName(10), $body = $this->randomName(20), array('author' => $user1));
    $thread_id = $response['message']->thread_id;

    $this->backdropGet('messages');

    // Make sure the widget is now displayed and the message is too.
    $this->assertText($subject);
    $this->assertFieldById('edit-author');

    // Search for user 3 which will find no results but the widget should still be displayed.
    $this->backdropPost(NULL, array('author' => $user3->name), t('Filter'));
    $this->assertNoText($subject);
    $this->assertFieldById('edit-author', $user3->name . ', ');

    // Reset filter widget.
    $this->backdropPost(NULL, array(), t('Reset'));
    $this->assertFieldById('edit-author');
    $this->assertText($subject);

    // Create a new thread through the api.
    $response = privatemsg_new_thread(array($user2), $subject2 = $this->randomName(10), $body2 = $this->randomName(20), array('author' => $user3));
    $thread_id = $response['message']->thread_id;

    // Make sure that the new message is displayed.
    $this->backdropGet('messages');
    $this->assertText($subject2);

    // Search for user 1 which should only display his message.
    $this->backdropPost(NULL, array('author' => $user1->name), t('Filter'));
    $this->assertText($subject);
    $this->assertNoText($subject2);

    // Save the filter and access /messages again - The filter should still be
    // active.
    $this->backdropPost(NULL, array(), t('Save filter'));
    $this->backdropGet('messages');
    $this->assertFieldById('edit-author', $user1->name . ', ');
    $this->assertText($subject);
    $this->assertNoText($subject2);

    // Reset filter widget.
    $this->backdropPost(NULL, array(), t('Reset'));
    $this->assertFieldById('edit-author');
    $this->assertText($subject);
    $this->assertText($subject2);
  }
}
